openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
paths:
  /users:
    get:
      operationId: getUsers
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
    post:
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWithoutID'
      responses:
        '201':
          description: Created
  /users/{userID}:
    get:
      operationId: getUser
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithBooks'
      parameters:
        - in: path
          name: userID
          schema:
            type: string
          required: true
  /books:
    post:
      operationId: registerBook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookWithoutID'
      responses:
        '201':
          description: Created
  /books/{bookID}/borrower/{userID}:
    post:
      operationId: borrowBook
      responses:
        '201':
          description: Created
      parameters:
        - in: path
          name: bookID
          schema:
            type: string
          required: true
        - in: path
          name: userID
          schema:
            type: string
          required: true
    delete:
      operationId: returnBook
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: bookID
          schema:
            type: string
          required: true
        - in: path
          name: userID
          schema:
            type: string
          required: true
components:
  schemas:
    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        ID:
          type: string
        name:
          type: string
      required:
        - ID
        - name
    UserWithoutID:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    UserWithBooks:
      type: object
      properties:
        ID:
          type: string
        name:
          type: string
        owenedBooks:
          $ref: '#/components/schemas/Books'
      required:
        - ID
        - name
    Book:
      type: object
      properties:
        ID:
          type: string
        ISBN13:
          type: string
        title:
          type: string
        ownerID:
          type: string
      required:
        - ID
        - ISBN13
        - title
        - ownerID
    BookWithoutID:
      type: object
      properties:
        ISBN13:
          type: string
        title:
          type: string
        ownerID:
          type: string
      required:
        - ISBN13
        - title
        - ownerID
    Books:
      type: array
      items:
        $ref: '#/components/schemas/Book'
